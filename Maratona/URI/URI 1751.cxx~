#include <iostream>
#include <cstdio>
#include <string.h>
#include <vector>
#include <queue>

#define INF 1000000000

using namespace std;

typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;

int N, F, aux, ans;
vector<vii> AdjList;
vi dist, friends, pai, visited;

int PesquisaBinaria (int chave)
{
     int inf = 0;     //Limite inferior  (o primeiro elemento do vetor em C é zero          )
     int sup = F-1; //Limite superior  (termina em um número a menos 0 a 9 são 10 numeros )
     int meio;
     while (inf <= sup)
     {
          meio = (inf + sup)/2;
          if (chave == friends[meio])
               return meio;
          if (chave < friends[meio])
               sup = meio-1;
          else
               inf = meio+1;
     }
     return -1;   // não encontrado
}

void printPath(int u){
	visited[u] = 1;
	if(PesquisaBinaria(u) != -1){
		//printf("achei %d\n", u);
		aux--;
	}/*else{
		printf("nao achei %d\n", u);
	}*/
	//printf(" %d\n", u);
	if(u != 1) printPath(pai[u]);
}

int main(int argc, char **argv)
{
	scanf("%d %d", &N, &F);
	aux = F;
	AdjList.assign(N+1, vii());
	for(int i = 0; i < N-1; i++){
		int u, v, w;
		cin >> u >> v >> w;
		AdjList[u].push_back(ii(v, w));
	}
	for(int i = 0; i < F; i++){
		int u;
		cin >> u;
		friends.push_back(u);
	}
	dist.assign(N+1, INF); pai.assign(N+1, -1);
	dist[0] = 0; dist[1] = 0;
	priority_queue<ii, vector<ii>, greater<ii> > pq;
	pq.push(ii(0, 1));
	while(!pq.empty()){
		ii front = pq.top(); pq.pop();
		int d = front.first, u = front.second;
		if(d > dist[u]) continue;
		for(int i = 0; i < (int) AdjList[u].size(); i++){
			ii v = AdjList[u][i];
			if(dist[v.first] > dist[u] + v.second){
				dist[v.first] = dist[u] + v.second;
				pai[v.first] = u;
				pq.push(ii(dist[v.first], v.first));
			}
		}
	}
	visited.assign(N+1, 0);
	ans = 1000000000;
	bool go = false;
	int posMaior = -1, maior = -1;
	for(int i = 0; i < N+1; i++){
		if(dist[i] > maior){
			maior = dist[i];
			posMaior = i;
		}
	}
	printPath(posMaior);
	if(!aux){
		puts("0");
	}else{
		int ans = 0;
		for(int i = 0; i < F; i++){
			if(!visited[friends[i]]){
				printf("peguei o amigo %d com peso %d\n", friends[i], dist[friends[i]]);
				ans += dist[friends[i]];
			}
		}
		printf("%d\n", ans);
	}
	//printf("posicao da maior eh %d || maior eh %d\n", posMaior, maior);
	return 0;
}

